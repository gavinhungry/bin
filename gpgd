#!/bin/bash
#
# Name: gpgd
# Auth: Gavin Lloyd <gavinhungry@gmail.com>
# Desc: GPG decryption script
#

source $(dirname "${BASH_SOURCE}")/abash/abash.sh
[ $# -eq 0 ] && usage "FILE [...]"

GPG=/usr/bin/gpg
GPGCONF=/usr/bin/gpgconf

while [ $# -gt 0 ]; do
  INPUT=$1
  OUTPUT=${INPUT%.gpg}
  [ "$INPUT" = "$OUTPUT" ] && OUTPUT="$1.decrypted"

  # check for valid input/output
  [ ! -e "$INPUT" ] && shift && warn "file '$INPUT' does not exist"
  [ -e "$OUTPUT" ]  && shift && warn "file '$OUTPUT' already exists"

  # decrypt file, remove output file on failure
  $GPG --batch --output "$OUTPUT" --decrypt "$INPUT" &> /dev/null
  if [ $? -ne 0 ]; then
    rm "$OUTPUT"
    err "failed to decrypt '$INPUT'"
  else
    msg "'$INPUT' successfully decrypted and written to '$OUTPUT'"
  fi

  # process next file
  shift
done

# clear cache
$GPGCONF --reload gpg-agent
