#!/usr/bin/env node

const finnhub = require('finnhub');

const API_KEY = process.env.FINNHUB_API_KEY;
finnhub.ApiClient.instance.authentications.api_key.apiKey = API_KEY;

let finnhubClient = new finnhub.DefaultApi();

let getQuote = symbol => {
  return new Promise((resolve, reject) => {
    finnhubClient.quote(symbol, (err, data) => {
      if (err) {
        return reject(err);
      }

      resolve(data);
    });
  });
};

let main = async () => {
  let symbol = process.argv[2];
  if (!symbol) {
    process.exit(1);
  }

  symbol = symbol.toUpperCase();

  let shareCount = Number(process.argv[3]) || 0;

  let quote = await getQuote(symbol).catch(() => {
    process.exit(2);
  });

  let currentValue = quote.c.toFixed(2);
  let previousClose = quote.pc.toFixed(2);

  let delta = currentValue - previousClose;
  let indicator = delta < 0 ? '-' : '+';
  let percentage = previousClose ?
    (100 * Math.abs(delta / previousClose)).toFixed(1) : 0;

  let str = `${currentValue} (${indicator}${percentage}%)`;

  if (shareCount) {
    let portfolio = (currentValue * shareCount).toLocaleString(undefined, {
      style: 'currency',
      currency: 'USD'
    });

    str += ` (${portfolio})`;
  }

  console.log(str);
};

main().catch(err => {
  console.error(err);
  process.exit(1);
});
