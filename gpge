#!/bin/bash
#
# Name: gpge
# Auth: Gavin Lloyd <gavinhungry@gmail.com>
# Date: 11 Nov 2012 (last modified: 19 Feb 2013)
# Desc: GPG encryption script
#

source functions.sh
[ $# -eq 0 ] && usage "FILE [OPTIONS] [FILE ...]"

GPG=/usr/bin/gpg
KEY=67B5350325AE9A86

# process options
unset OPTIONS
for arg in "$@"; do
  [[ "$arg" == -* ]] && OPTIONS+="$arg " && shift || break
done

# process files
while [ $# -gt 0 ]; do
  INPUT=$1
  OUTPUT=${INPUT}.gpg

  # check for valid input/output
  [ ! -e "$INPUT" ] && shift && warn "file '$INPUT' does not exist"
  [ -e "$OUTPUT" ]  && shift && warn "file '$OUTPUT' already exists"
  
  # encrypt file, remove output file on failure
  $GPG --batch -o "$OUTPUT" -r $KEY -ea $OPTIONS "$INPUT" &> /dev/null
  if [ $? -ne 0 ]; then
    rm "$OUTPUT"
    err "failed to encrypt '$INPUT'"
  else
    msg "'$INPUT' successfully encrypted and written to '$OUTPUT'"
  fi

  # process next file
  shift
done
