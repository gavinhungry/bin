#!/bin/bash
#
# Name: gpge
# Auth: Gavin Lloyd <gavinhungry@gmail.com>
# Desc: GPG encryption script
#

source $(dirname "${BASH_SOURCE}")/abash/abash.sh
[ $# -eq 0 ] && usage "FILE [OPTIONS] [FILE ...]"

GPG=/usr/bin/gpg

KEY=$GPG_FINGERPRINT
[ -z $KEY ] && die "GPG_FINGERPRINT is not defined"

# process options
for ARG in "$@"; do
  case $ARG in
    -*) OPTIONS+=" ${ARG}" ;;
    *) FILES+=" ${ARG}"
  esac
done

# process files
for INPUT in $FILES; do
  OUTPUT=${INPUT}.gpg

  # check for valid input/output
  [ ! -e "$INPUT" ] && shift && warn "file '$INPUT' does not exist"
  [ -e "$OUTPUT" ]  && shift && warn "file '$OUTPUT' already exists"

  # encrypt file, remove output file on failure
  $GPG --batch -o "$OUTPUT" -r $KEY -ea $OPTIONS "$INPUT" &> /dev/null
  if [ $? -ne 0 ]; then
    rm -f "$OUTPUT"
    err "failed to encrypt '$INPUT'"
  else
    msg "'$INPUT' successfully encrypted and written to '$OUTPUT'"
  fi

  # process next file
  shift
done
