#!/bin/bash

source $(dirname "${BASH_SOURCE[0]}")/.abash/abash.sh

([ $# -eq 0 ] || arge help) && usage '[options] PKGNAME [PKGNAME...]
  -p, --pkgbuild    only fetch PKGBUILD and supporting files
  -h, --help        this message
'

export GNUPGHOME=/etc/pacman.d/gnupg

PACKAGES_DIR="$HOME/devel/arch/packages"
[ -d "$PACKAGES_DIR" ] || mkdir -p "$PACKAGES_DIR"

for PKG in $(nfargs); do
  _PKG=$(expac -S '%e' $PKG)
  [ "$_PKG" != '' -a "$_PKG" != '(null)' ] && PKG=$_PKG

  REPO=$(pacman -Si "$PKG" 2> /dev/null | grep ^Repository | awk '{print $NF}')
  if [ -z "$REPO" ]; then
    warn "Unknown repo for package $PKG"
    continue
  fi

  cd "$PACKAGES_DIR"

  msg "fetching $REPO/$PKG"
  [ -d "$PACKAGES_DIR/$PKG" ] && warn "path $PACKAGES_DIR/$PKG already exists"

  if [ "$REPO" == 'aur' ]; then
    git clone https://aur.archlinux.org/"$PKG"
  else
    pkgctl repo clone "$PKG"
    mv "$PKG"/.git/hooks "$PKG"/.git/hooks.default
  fi

  if [ $? -ne 0 ]; then
    warn 'Git fetch failed'
    continue
  fi

  if ! arge pkgbuild; then
    cd "$PACKAGES_DIR/$PKG"
    arge pkgbuild || makepkg -os --noconfirm
  fi

  msg "$REPO/$PKG sources ready in ${PACKAGES_DIR#$HOME/}/$PKG"
done
