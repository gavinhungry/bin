#!/bin/bash
#
# Name: pkgsource
# Auth: Gavin Lloyd
# Desc: Copies PKGBUILD from SVN to devel folder
#

source $(dirname "${BASH_SOURCE}")/abash/abash.sh
[ $# -eq 0 ] && die "no package(s) specified"

export GNUPGHOME=/etc/pacman.d/gnupg

TMPDIR=/tmp/pkgsource-$(whoami)-${$}
ABSDEVEL=$HOME/devel/arch/abs
AURDEVEL=$HOME/devel/arch/aur

AUR_DOMAIN=aur.archlinux.org
AUR_VERSION=5

SVN="svn://svn.archlinux.org"
AUR="https://${AUR_DOMAIN}"
RPC="https://${AUR_DOMAIN}/rpc.php?v=${AUR_VERSION}&type"

function getFromAUR {
  PACKAGE="$1"
  AURPKG=${TMPDIR}/${PACKAGE}.tar.gz

  TAR=$(curl -LfGs --data-urlencode "arg=$PACKAGE" "$RPC=info" | jshon -Q -e results -a -e URLPath -u)
  if [ ! -z ${TAR} ]; then
    msg "${PACKAGE} found in AUR"
    /usr/bin/wget -q "${AUR}${TAR}" -O ${AURPKG}
    /bin/tar xfvz ${AURPKG} -C ${AURDEVEL}
    cd ${AURDEVEL}/${PACKAGE}

    pref PKGONLY || makepkg -ors --noconfirm
    msg "${PACKAGE} package ready in ${AURDEVEL}/${PACKAGE}"
  else
    err "${PACKAGE} not found in AUR"
  fi
}

function getPKGBUILD {
  [[ ${1} = -* ]] && warn "incorrect parameter ${1}"
  PACKAGE="$1"

  # get repository given a package name
  REPO=$(/usr/bin/pacman -Si "${PACKAGE}" 2> /dev/null | egrep ^Repository | sed -e s/^.*\:\\s*//g)
  pref TESTING && REPO='testing'

  if [ -z ${REPO} ]; then
    err "${PACKAGE} not found in any known repository"
    getFromAUR ${PACKAGE}
    continue
  fi

  if [ ${REPO} = "community" -o $REPO = "multilib" ]; then
    SVNPKG="${SVN}/community"
  else
    SVNPKG="${SVN}/packages"
  fi

  msg "checking out ${PACKAGE} from subversion"
  /usr/bin/svn co --depth=empty ${SVNPKG} ${TMPDIR}
  cd ${TMPDIR}

  /usr/bin/svn up ${PACKAGE}
  PKGDIR=${TMPDIR}/${PACKAGE}/repos/${REPO}-${HOSTTYPE}
  if [ ! -f ${PKGDIR}/PKGBUILD ]; then
    PKGDIR=${TMPDIR}/${PACKAGE}/repos/${REPO}-any
  fi
  [ ! -f ${PKGDIR}/PKGBUILD ] && warn "subversion checkout failed"

  [ -d ${ABSDEVEL}/${PACKAGE} ] && warn "path ${ABSDEVEL}/${PACKAGE} already exists"

  cp -r ${PKGDIR} ${ABSDEVEL}/${PACKAGE}
  cd ${ABSDEVEL}/${PACKAGE}

  pref PKGONLY || makepkg -ors --noconfirm
  msg "${REPO}/${PACKAGE} package ready in ${ABSDEVEL}/${PACKAGE}"
}

if [ ! -d ${ABSDEVEL} ]; then
  msg "path ${ABSDEVEL} doesn't exist"
  mkdir -p ${ABSDEVEL}
fi

mkdir -p ${TMPDIR}

for ARG in "$@"; do
  case $ARG in
    '-p'|'--pkgbuild') PKGONLY=1 ;;
    '-t'|'--testing') TESTING=1 ;;
    '-k'|'--keep') KEEP=1 ;;
    -*) warn "invalid argument $ARG" ;;
    *) PACKAGES+=" ${ARG}"
  esac
done

for PACKAGE in ${PACKAGES}; do
  getPKGBUILD ${PACKAGE}
done

[ -d ${TMPDIR} ] && ! pref KEEP && rm -fr ${TMPDIR}
