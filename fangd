#!/usr/bin/env node

const {
  interval,
  interval_max,
  curve,
  targets
} = require(`${process.env.XDG_LOCAL_HOME}/etc/fangd.json`);

const { execSync } = require('child_process');
const { globSync } = require('glob');

const mean = arr => arr.reduce((memo, num) => memo + num, 0) / arr.length;

targets.forEach(target => {
  const pwmPaths = globSync(target.pwm);

  let temps = [];
  let prev = null;

  const update = () => {
    let temp = Number(execSync(target.command));
    temps.push(temp > 1000 ? temp / 1000 : temp);
    temps = temps.slice(Math.max(0, temps.length - interval_max));

    let avg = Math.round(mean(temps));
    let item = curve.find(item => item.temp <= avg) || curve[curve.length - 1];

    if (item !== prev) {
      console.debug(`${target.name}: ${item.pwm}`);
      prev = item;
    }

    // 40-fan-pwm-rw
    pwmPaths.forEach(input => {
      execSync(`echo ${item.pwm} > ${input}`);
    });

    setTimeout(update, interval * 1000);
  };

  update();
});
